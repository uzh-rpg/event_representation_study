import numpy as np
import matplotlib.pyplot as plt
import os
import sys
import json
import tqdm


FOLDER_PATH = "/data/storage/nzubic/GEN1_CPs/"


def read_list_from_file(file_path):
    with open(file_path, "r") as f:
        # Load the JSON data from the file
        data = json.load(f)
        # Return the data as a Python list
        return np.array(data)


sample_indices_100 = [
    860,
    993,
    1025,
    1037,
    1103,
    1446,
    1487,
    1769,
    2193,
    2216,
    2244,
    2854,
    2961,
    3032,
    3112,
    3233,
    3677,
    3949,
    3959,
    4332,
    4567,
    4893,
    4911,
    5042,
    5053,
    5419,
    5671,
    5887,
    6187,
    6918,
    7232,
    7938,
    8240,
    8245,
    8571,
    8741,
    9096,
    9520,
    9613,
    9632,
    9772,
    10131,
    10142,
    10175,
    10413,
    10425,
    10561,
    10983,
    11477,
    11622,
    11658,
    12049,
    12075,
    12077,
    12166,
    12272,
    12334,
    12568,
    12680,
    12771,
    12897,
    13002,
    13263,
    13390,
    14108,
    14183,
    14650,
    14717,
    15025,
    15099,
    15120,
    15161,
    15696,
    15905,
    15916,
    16109,
    16357,
    16526,
    16874,
    16994,
    17014,
    17395,
    17705,
    17791,
    17909,
    18366,
    18529,
    18588,
    18657,
    18823,
    18942,
    19374,
    19409,
    19565,
    19604,
    19648,
    20138,
    20148,
    20241,
    20249,
]
# sample_indices_1000 = [1, 18, 42, 78, 117, 128, 132, 170, 194, 205, 221, 224, 233, 249, 257, 278, 295, 307, 413, 424, 435, 509, 515, 531, 548, 585, 650, 672, 682, 700, 705, 712, 747, 800, 803, 819, 829, 860, 913, 916, 937, 965, 968, 974, 983, 993, 995, 997, 1017, 1025, 1037, 1060, 1062, 1066, 1069, 1098, 1103, 1116, 1141, 1164, 1170, 1202, 1222, 1237, 1248, 1292, 1295, 1374, 1409, 1419, 1423, 1446, 1462, 1475, 1487, 1492, 1499, 1519, 1523, 1536, 1539, 1546, 1644, 1677, 1682, 1685, 1703, 1738, 1769, 1785, 1794, 1827, 1848, 1895, 1901, 1911, 1933, 1995, 2031, 2060, 2078, 2099, 2166, 2172, 2193, 2194, 2201, 2207, 2216, 2244, 2256, 2275, 2303, 2305, 2333, 2368, 2380, 2385, 2386, 2400, 2434, 2436, 2440, 2448, 2461, 2472, 2503, 2567, 2597, 2610, 2624, 2625, 2661, 2663, 2673, 2675, 2681, 2688, 2694, 2755, 2769, 2773, 2821, 2834, 2854, 2865, 2868, 2885, 2901, 2902, 2929, 2961, 3026, 3032, 3040, 3060, 3065, 3074, 3079, 3107, 3112, 3113, 3114, 3124, 3168, 3172, 3220, 3226, 3233, 3234, 3245, 3290, 3336, 3343, 3349, 3378, 3390, 3391, 3397, 3420, 3442, 3489, 3495, 3507, 3511, 3529, 3558, 3559, 3562, 3579, 3603, 3604, 3608, 3632, 3642, 3655, 3656, 3664, 3669, 3677, 3692, 3716, 3779, 3788, 3821, 3833, 3850, 3864, 3949, 3950, 3959, 3968, 3978, 4015, 4027, 4043, 4070, 4071, 4076, 4096, 4105, 4167, 4229, 4230, 4295, 4299, 4325, 4332, 4337, 4421, 4422, 4460, 4497, 4519, 4526, 4562, 4567, 4578, 4584, 4599, 4658, 4667, 4687, 4689, 4706, 4716, 4732, 4790, 4890, 4893, 4911, 4959, 4964, 4974, 4982, 4985, 4987, 4990, 5007, 5042, 5053, 5097, 5174, 5175, 5180, 5181, 5208, 5289, 5296, 5318, 5328, 5364, 5380, 5382, 5419, 5460, 5461, 5565, 5593, 5603, 5640, 5652, 5671, 5682, 5710, 5728, 5759, 5763, 5783, 5791, 5798, 5807, 5831, 5833, 5834, 5835, 5887, 5893, 5908, 5912, 5940, 5945, 5961, 5981, 5983, 6029, 6031, 6055, 6059, 6074, 6100, 6135, 6162, 6172, 6181, 6187, 6198, 6224, 6274, 6297, 6338, 6362, 6425, 6475, 6484, 6491, 6495, 6530, 6574, 6594, 6619, 6681, 6682, 6738, 6751, 6768, 6780, 6782, 6784, 6843, 6851, 6881, 6894, 6915, 6918, 6991, 7062, 7072, 7084, 7111, 7118, 7122, 7125, 7130, 7142, 7164, 7170, 7175, 7229, 7232, 7235, 7315, 7342, 7365, 7399, 7412, 7447, 7470, 7483, 7511, 7512, 7531, 7593, 7658, 7712, 7713, 7726, 7733, 7770, 7792, 7808, 7828, 7878, 7889, 7910, 7938, 8014, 8086, 8113, 8114, 8123, 8155, 8164, 8191, 8197, 8198, 8240, 8245, 8247, 8262, 8264, 8316, 8384, 8388, 8399, 8423, 8434, 8441, 8464, 8476, 8487, 8536, 8539, 8548, 8571, 8602, 8604, 8625, 8661, 8674, 8701, 8712, 8724, 8741, 8851, 8899, 8935, 8951, 8984, 8986, 8991, 9010, 9021, 9045, 9052, 9084, 9091, 9096, 9110, 9140, 9150, 9217, 9274, 9292, 9306, 9328, 9367, 9368, 9372, 9401, 9423, 9427, 9435, 9441, 9442, 9450, 9454, 9455, 9459, 9462, 9473, 9478, 9488, 9509, 9514, 9520, 9528, 9563, 9608, 9613, 9632, 9635, 9638, 9640, 9656, 9741, 9772, 9798, 9818, 9835, 9858, 9865, 9871, 9889, 9900, 9903, 9927, 9978, 9999, 10008, 10030, 10039, 10064, 10066, 10115, 10131, 10142, 10148, 10175, 10178, 10182, 10193, 10210, 10248, 10308, 10391, 10393, 10406, 10413, 10425, 10434, 10450, 10469, 10482, 10490, 10504, 10543, 10561, 10586, 10587, 10602, 10627, 10629, 10634, 10700, 10704, 10727, 10793, 10803, 10816, 10817, 10854, 10872, 10881, 10884, 10889, 10936, 10945, 10983, 10994, 11009, 11021, 11028, 11055, 11057, 11058, 11098, 11108, 11115, 11182, 11194, 11208, 11255, 11266, 11363, 11390, 11407, 11419, 11477, 11486, 11517, 11556, 11591, 11608, 11616, 11620, 11622, 11633, 11635, 11648, 11658, 11663, 11743, 11770, 11785, 11793, 11817, 11833, 11841, 11859, 11872, 11902, 11907, 11935, 11952, 11960, 11970, 11980, 11987, 12014, 12049, 12075, 12076, 12077, 12098, 12115, 12164, 12166, 12190, 12192, 12260, 12266, 12272, 12300, 12317, 12329, 12334, 12341, 12348, 12360, 12364, 12388, 12399, 12419, 12451, 12568, 12590, 12612, 12616, 12618, 12634, 12660, 12677, 12680, 12696, 12703, 12760, 12771, 12773, 12788, 12797, 12838, 12856, 12897, 12914, 12916, 12918, 12920, 12953, 12955, 12957, 12969, 12983, 13002, 13031, 13042, 13066, 13079, 13123, 13141, 13142, 13149, 13178, 13206, 13243, 13263, 13264, 13312, 13366, 13367, 13379, 13390, 13391, 13418, 13433, 13441, 13474, 13513, 13539, 13567, 13568, 13587, 13600, 13613, 13619, 13646, 13669, 13694, 13697, 13729, 13735, 13768, 13769, 13793, 13804, 13832, 13858, 13859, 13905, 13909, 13954, 13977, 13978, 13996, 14023, 14032, 14052, 14075, 14086, 14100, 14108, 14160, 14183, 14192, 14218, 14266, 14329, 14349, 14373, 14402, 14405, 14436, 14439, 14440, 14487, 14516, 14536, 14562, 14577, 14594, 14596, 14628, 14637, 14642, 14650, 14671, 14677, 14679, 14698, 14710, 14717, 14747, 14770, 14771, 14789, 14805, 14813, 14883, 14909, 14915, 14919, 15025, 15026, 15032, 15044, 15046, 15061, 15099, 15110, 15120, 15161, 15176, 15183, 15187, 15191, 15233, 15239, 15269, 15274, 15314, 15336, 15337, 15343, 15358, 15359, 15361, 15365, 15369, 15376, 15385, 15408, 15444, 15452, 15482, 15497, 15501, 15565, 15668, 15696, 15700, 15702, 15769, 15772, 15783, 15800, 15803, 15805, 15815, 15846, 15866, 15891, 15905, 15916, 15921, 15933, 15969, 15990, 16005, 16011, 16054, 16078, 16109, 16144, 16165, 16196, 16198, 16222, 16226, 16227, 16254, 16257, 16299, 16342, 16344, 16348, 16357, 16372, 16397, 16411, 16417, 16442, 16446, 16500, 16526, 16536, 16545, 16595, 16596, 16611, 16630, 16653, 16674, 16702, 16746, 16839, 16866, 16874, 16894, 16906, 16915, 16945, 16994, 17014, 17103, 17151, 17159, 17170, 17172, 17173, 17214, 17226, 17230, 17245, 17262, 17270, 17280, 17324, 17338, 17374, 17381, 17383, 17385, 17388, 17395, 17406, 17460, 17494, 17520, 17544, 17557, 17600, 17624, 17652, 17698, 17705, 17791, 17807, 17854, 17867, 17893, 17909, 17959, 17997, 18048, 18072, 18073, 18090, 18096, 18102, 18122, 18145, 18212, 18310, 18311, 18318, 18335, 18364, 18366, 18403, 18464, 18466, 18525, 18529, 18557, 18572, 18577, 18588, 18592, 18597, 18612, 18616, 18627, 18636, 18657, 18701, 18771, 18779, 18796, 18818, 18823, 18865, 18878, 18911, 18941, 18942, 18947, 18950, 18995, 19000, 19033, 19039, 19048, 19154, 19168, 19194, 19199, 19203, 19209, 19215, 19221, 19259, 19290, 19294, 19329, 19336, 19338, 19344, 19360, 19374, 19378, 19406, 19409, 19421, 19460, 19504, 19552, 19565, 19582, 19604, 19606, 19618, 19624, 19625, 19640, 19648, 19681, 19688, 19703, 19705, 19716, 19722, 19735, 19739, 19757, 19786, 19790, 19837, 19876, 19945, 20015, 20096, 20134, 20138, 20147, 20148, 20180, 20204, 20205, 20216, 20239, 20241, 20249, 20251, 20258, 20269, 20270, 20274, 20275, 20307, 20318]
num_validation_samples = 20329
random_indices = np.random.permutation(np.arange(num_validation_samples))
remaining_indices = random_indices[
    ~np.isin(random_indices, test_elements=sample_indices_100)
].tolist()

all_indices = np.array(sample_indices_100 + remaining_indices)


plt.rcParams["text.usetex"] = True
plt.rcParams["font.size"] = "16"
plt.rcParams["lines.linewidth"] = 2

# VOXEL GRID

data = [
    # {"file": "optimized_rep.txt", "color": "k", "label": "ERGO-12", "marker": "."},
    {
        "file": "mixed_density_event_stack.txt",
        "color": "blue",
        "label": "MDES",
        "marker": ".",
    },
    {"file": "voxel_grid.txt", "color": "r", "label": "Voxel Grid", "marker": "."},
    {"file": "tore.txt", "color": "orange", "label": "TORE", "marker": "."},
    {
        "file": "time_surface.txt",
        "color": "green",
        "label": "Time Surface",
        "marker": ".",
    },
    {
        "file": "histogram_2d.txt",
        "color": "purple",
        "label": "2D Histogram",
        "marker": ".",
    },
]

loaded_data = np.stack(
    [read_list_from_file(os.path.join(FOLDER_PATH, d["file"])) for d in data]
)
diffs = np.diff(loaded_data, axis=0)


num_samples_list = np.arange(1, num_validation_samples, 10)
fig, ax = plt.subplots()
pbar = tqdm.tqdm(total=len(data) * len(num_samples_list))
for d in data:
    cp = read_list_from_file(os.path.join(FOLDER_PATH, d["file"]))
    cp_sorted = cp[all_indices]
    num_samples = np.arange(len(cp_sorted)) + 1
    cp_mean = np.cumsum(cp_sorted) / num_samples
    ax.scatter(
        num_samples, cp_mean, color=d["color"], label=d["label"], marker=d["marker"]
    )

ax.set_xlabel("Number of samples")
ax.set_ylabel("GWD")
ax.set_ylim([0.35, 0.9])
ax.set_xscale("log")

ax.legend(
    frameon=True,
    loc="upper right",
    framealpha=1,
    edgecolor="0",
    handletextpad=0.1,
    borderpad=0.2,
    borderaxespad=0.5,
    fontsize=14,
)

plt.show()
